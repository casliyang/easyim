<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">
	
    <!-- 配置连接池工厂PooledConnectionFactory -->
    <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616" />
				<property name="userName" value="imuser"/>
				<property name="password" value="fulong"/>
				<property name="useAsyncSend" value="true" />
            </bean>
        </property>
        <property name="maxConnections" value="100"></property>
    </bean>
	
    <bean id="topicListenConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616" />
				<property name="userName" value="imuser"/>
				<property name="password" value="fulong"/>
            </bean>
        </property>
        <property name="maxConnections" value="100"></property>
    </bean>
	
	<!-- 定义主题 -->
	<bean id="myTopic"  class="org.apache.activemq.command.ActiveMQTopic">
      <constructor-arg value="IMTopic"/>
   	</bean>
   	
   	<!-- bean id="myTopic2"  class="org.apache.activemq.command.ActiveMQTopic">
      <constructor-arg value="normandy.topic2"/>
   	</bean-->
   	
   	<!-- 消息转换器 -->
	<bean id="messageConvertForSys" class="cn.fulong.im.tool.MessageConvertForSys"></bean>
   	
   	<!-- TOPIC send jms模板 -->
	<bean id="topicSendJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory"></property>
		<property name="defaultDestination" ref="myTopic" />
		<property name="messageConverter" ref="messageConvertForSys" />
		<!-- 开启订阅模式 -->
		<property name="pubSubDomain" value="true"/>
		
		<!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false--> 
		<property name="explicitQosEnabled" value="true" />  
		
		<!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->
        <property name="deliveryMode" value="2" /> 
        
        <!-- 消息应答方式  
        Session.AUTO_ACKNOWLEDGE  消息自动签收  
        Session.CLIENT_ACKNOWLEDGE  客户端调用acknowledge方法手动签收  
        Session.DUPS_OK_ACKNOWLEDGE 不必必须签收，消息可能会重复发送  
        -->
        <property name="sessionAcknowledgeMode" value="1" />   

	</bean>
	
	<!-- 消息发送方 -->
	<bean id="topicMessageSender" class="cn.fulong.im.tool.MessageSenderImpl">
		<property name="jmsTemplate" ref="topicSendJmsTemplate"></property>
	</bean>
	
	<!-- 消息接收方 -->
	<bean id="topicMessageReceiver" class="cn.fulong.im.tool.MessageReceiverImpl">
	</bean>
	
	<!-- 主题消息监听容器 -->
	<bean id="listenerContainer"  
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="topicListenConnectionFactory" />  
        <property name="pubSubDomain" value="true"/><!-- default is false -->
        <property name="destination" ref="myTopic" />  <!-- listen topic: myTopic -->
        <property name="subscriptionDurable" value="true"/>
        <property name="clientId" value="imclient"/><!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，知道被这个ID的客户端消费掉-->
        <property name="messageListener" ref="topicMessageReceiver" />  
    </bean>
    
    <!-- 主题消息监听容器2 
    <bean id="listenerContainer2"  
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="topicListenConnectionFactory" />  
        <property name="pubSubDomain" value="true"/>
        <property name="destination" ref="myTopic2" /> 
        <property name="subscriptionDurable" value="true"/>
        <property name="clientId" value="clientId_002"/> 
        <property name="messageListener" ref="topicMessageReceiver" />  
    </bean-->
    
    <!-- 客户状态列表 -->
    <bean id="clientsList" class="cn.fulong.im.tool.OnlineClients"/>
</beans>